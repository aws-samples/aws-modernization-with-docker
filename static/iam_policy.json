{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "CloudFormationCore",
      "Effect": "Allow",
      "Action": [
        "cloudformation:CreateStack",
        "cloudformation:UpdateStack",
        "cloudformation:DeleteStack",
        "cloudformation:DescribeStacks",
        "cloudformation:ListStackResources",
        "cloudformation:ValidateTemplate",
        "cloudformation:CreateChangeSet",
        "cloudformation:ExecuteChangeSet"
      ],
      "Resource": "*"
    },
    {
      "Sid": "S3Limited",
      "Effect": "Allow",
      "Action": [
        "s3:CreateBucket",
        "s3:DeleteBucket",
        "s3:PutObject",
        "s3:GetObject",
        "s3:DeleteObject",
        "s3:ListBucket",
        "s3:GetBucketPolicy",
        "s3:PutBucketPolicy"
      ],
      "Resource": "*"
    },
    {
      "Sid": "IAMPermissions",
      "Effect": "Allow",
      "Action": [
        "iam:CreateRole",
        "iam:DeleteRole",
        "iam:GetRole",
        "iam:PutRolePolicy",
        "iam:DeleteRolePolicy",
        "iam:PassRole",
        "iam:TagRole",
        "iam:AttachRolePolicy",
        "iam:DetachRolePolicy"
      ],
      "Resource": [
        "arn:aws:iam::*:role/*"
      ]
    },
    {
      "Sid": "ContainerServices",
      "Effect": "Allow",
      "Action": [
        "ecs:CreateCluster",
        "ecs:DeleteCluster",
        "ecs:DescribeClusters",
        "ecs:CreateService",
        "ecs:UpdateService",
        "ecs:DeleteService",
        "ecs:DescribeServices",
        "ecs:RegisterTaskDefinition",
        "ecs:DeregisterTaskDefinition",
        "ecr:GetAuthorizationToken",
        "ecr:BatchGetImage",
        "ecr:PutImage",
        "ecr:InitiateLayerUpload",
        "ecr:CompleteLayerUpload"
      ],
      "Resource": "*"
    },
    {
      "Sid": "NetworkingBasic",
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeVpcs",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups",
        "ec2:CreateSecurityGroup",
        "ec2:DeleteSecurityGroup",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:RevokeSecurityGroupIngress"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SecretsAndLogs",
      "Effect": "Allow",
      "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:CreateSecret",
        "secretsmanager:DeleteSecret",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
      ],
      "Resource": [
        "arn:aws:secretsmanager:*:*:secret:*",
        "arn:aws:logs:*:*:*"
      ]
    },
    {
      "Sid": "CodeBuildAndPipeline",
      "Effect": "Allow",
      "Action": [
        "codebuild:CreateProject",
        "codebuild:BatchGetProjects",
        "codebuild:StartBuild",
        "codepipeline:CreatePipeline",
        "codepipeline:GetPipeline",
        "codepipeline:StartPipelineExecution"
      ],
      "Resource": [
        "arn:aws:codebuild:*:*:project/docker-*",
        "arn:aws:codepipeline:*:*:*"
      ]
    },
    {
      "Sid": "DenyLargeInstances",
      "Effect": "Deny",
      "Action": "ec2:RunInstances",
      "Resource": "arn:aws:ec2:*:*:instance/*",
      "Condition": {
        "StringLike": {
          "ec2:InstanceType": [
            "*6xlarge",
            "*8xlarge",
            "*10xlarge",
            "*12xlarge",
            "*16xlarge",
            "*24xlarge",
            "*metal"
          ]
        }
      }
    },
    {
      "Sid": "Applications",
      "Effect": "Allow",
      "Action": ["servicecatalog:ListApplications"],
      "Resource": "arn:aws:servicecatalog:*:{{.AccountId}}:/applications/*"
    },
    {
      "Sid": "CostAndUsage",
      "Effect": "Allow",
      "Action": ["ce:GetCostAndUsage"],
      "Resource": "arn:aws:ce:*:{{.AccountId}}:/GetCostAndUsage"
    },
    {
      "Sid": "SecurityHub",
      "Effect": "Allow",
      "Action": ["securityhub:DescribeHub"],
      "Resource": "arn:aws:securityhub:*:{{.AccountId}}:hub/default*"
    },
    {
      "Sid": "SecretsListPolicy",
      "Effect": "Allow",
      "Action": [
        "secretsmanager:ListSecrets"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SecretsAccessPolicy",
      "Effect": "Allow",
      "Action": [
        "secretsmanager:GetResourcePolicy",
        "secretsmanager:DescribeSecret"
      ],
      "Resource": "arn:aws:secretsmanager:*:{{.AccountId}}:secret:VSCodeServer*"
    }
  ]
}
