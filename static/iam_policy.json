{
  "Version": "2012-10-17",
  "Statement": [
      {
          "Sid": "CloudFormationAndRelatedServices",
          "Effect": "Allow",
          "Action": [
              "cloudformation:CreateStack",
              "cloudformation:UpdateStack",
              "cloudformation:DeleteStack",
              "cloudformation:DescribeStacks",
              "cloudformation:ListStackResources",
              "cloudformation:GetTemplateSummary",
              "cloudformation:ValidateTemplate"
          ],
          "Resource": "*"
      },
      {
          "Sid": "IAMPermissions",
          "Effect": "Allow",
          "Action": [
              "iam:CreateRole",
              "iam:DeleteRole",
              "iam:GetRole",
              "iam:PutRolePolicy",
              "iam:DeleteRolePolicy",
              "iam:UpdateAssumeRolePolicy",
              "iam:CreateOpenIDConnectProvider",
              "iam:DeleteOpenIDConnectProvider",
              "iam:GetOpenIDConnectProvider",
              "iam:UpdateOpenIDConnectProviderThumbprint",
              "iam:CreateInstanceProfile",
              "iam:DeleteInstanceProfile",
              "iam:GetInstanceProfile",
              "iam:RemoveRoleFromInstanceProfile",
              "iam:AddRoleToInstanceProfile",
              "iam:PassRole",
              "iam:TagRole",
              "iam:TagOpenIDConnectProvider",
              "iam:AttachRolePolicy",
              "iam:DetachRolePolicy"
          ],
          "Resource": [
              "arn:aws:iam::*:role/*",
              "arn:aws:iam::*:oidc-provider/*",
              "arn:aws:iam::*:instance-profile/*"
          ]
      },
      {
          "Sid": "LambdaPermissions",
          "Effect": "Allow",
          "Action": [
              "lambda:CreateFunction",
              "lambda:DeleteFunction",
              "lambda:GetFunction",
              "lambda:UpdateFunctionCode",
              "lambda:UpdateFunctionConfiguration",
              "lambda:AddPermission",
              "lambda:RemovePermission",
              "lambda:TagResource",
              "lambda:InvokeFunction",
              "lambda:GetFunctionConfiguration",
              "lambda:PutFunctionConcurrency"
          ],
          "Resource": "arn:aws:lambda:*:*:function:*"
      },
      {
          "Sid": "LambdaServicePermissions",
          "Effect": "Allow",
          "Action": [
              "ec2:DescribeNetworkInterfaces",
              "ec2:CreateNetworkInterface",
              "ec2:DeleteNetworkInterface",
              "ec2:DescribeInstances",
              "ec2:AttachNetworkInterface"
          ],
          "Resource": "*"
      },
      {
          "Sid": "EC2Permissions",
          "Effect": "Allow",
          "Action": [
              "ec2:DescribeInstances",
              "ec2:RunInstances",
              "ec2:TerminateInstances",
              "ec2:CreateSecurityGroup",
              "ec2:DeleteSecurityGroup",
              "ec2:DescribeSecurityGroups",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:RevokeSecurityGroupIngress",
              "ec2:AuthorizeSecurityGroupEgress",
              "ec2:RevokeSecurityGroupEgress",
              "ec2:DescribeVpcs",
              "ec2:DescribeSubnets",
              "ec2:CreateTags"
          ],
          "Resource": "*"
      },
      {
          "Sid": "SecretsManagerPermissions",
          "Effect": "Allow",
          "Action": [
              "secretsmanager:CreateSecret",
              "secretsmanager:DeleteSecret",
              "secretsmanager:GetSecretValue",
              "secretsmanager:PutSecretValue",
              "secretsmanager:UpdateSecret",
              "secretsmanager:TagResource"
          ],
          "Resource": "arn:aws:secretsmanager:*:*:secret:*"
      },
      {
          "Sid": "SSMPermissions",
          "Effect": "Allow",
          "Action": [
              "ssm:CreateDocument",
              "ssm:DeleteDocument",
              "ssm:GetDocument",
              "ssm:UpdateDocument",
              "ssm:SendCommand",
              "ssm:GetParameter",
              "ssm:GetParameters",
              "ssm:PutParameter",
              "ssm:DeleteParameter"
          ],
          "Resource": [
              "arn:aws:ssm:*:*:document/*",
              "arn:aws:ssm:*:*:parameter/*"
          ]
      },
      {
          "Sid": "CloudWatchLogPermissions",
          "Effect": "Allow",
          "Action": [
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:PutLogEvents",
              "logs:DeleteLogGroup"
          ],
          "Resource": "arn:aws:logs:*:*:*"
      },
      {
        "Sid": "EKSPermissions",
        "Effect": "Allow",
        "Action": [
          "eks:DescribeCluster",
          "eks:ListClusters",
          "eks:UpdateClusterConfig",
          "eks:TagResource",
          "eks:CreateCluster",
          "eks:DeleteCluster"
        ],
        "Resource": "arn:aws:eks:*:*:cluster/*"
      },
      {
          "Sid": "DenyLargeInstances",
          "Effect": "Deny",
          "Action": "ec2:RunInstances",
          "Resource": "arn:aws:ec2:*:*:instance/*",
          "Condition": {
              "StringLike": {
                  "ec2:InstanceType": [
                      "*6xlarge",
                      "*8xlarge",
                      "*10xlarge",
                      "*12xlarge",
                      "*16xlarge",
                      "*18xlarge",
                      "*24xlarge",
                      "f1.4xlarge",
                      "x1*",
                      "z1*",
                      "*metal"
                  ]
              }
          }
      },
      {
          "Sid": "DenyReservationPurchases",
          "Effect": "Deny",
          "Action": [
              "ec2:ModifyReservedInstances",
              "ec2:PurchaseHostReservation",
              "ec2:PurchaseReservedInstancesOffering",
              "ec2:PurchaseScheduledInstances",
              "rds:PurchaseReservedDBInstancesOffering"
          ],
          "Resource": "*"
      }
  ]
}